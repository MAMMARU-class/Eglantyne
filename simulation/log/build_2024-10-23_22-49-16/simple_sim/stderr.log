[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:41:31:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ktrajectpry_msgs[m[Kâ€™ does not name a type
   41 |     void update_motions(const [01;31m[Ktrajectpry_msgs[m[K::msg::JointTrajectpry & motion) const
      |                               [01;31m[K^~~~~~~~~~~~~~~[m[K
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:41:51:[m[K [01;31m[Kerror: [m[Kexpected unqualified-id before â€˜[01m[K::[m[Kâ€™ token
   41 |     void update_motions(const trajectpry_msgs::msg[01;31m[K::[m[KJointTrajectpry & motion) const
      |                                                   [01;31m[K^~[m[K
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:41:51:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K)[m[Kâ€™ before â€˜[01m[K::[m[Kâ€™ token
   41 |     void update_motions[34m[K([m[Kconst trajectpry_msgs::msg[01;31m[K:[m[K[32m[K:[m[KJointTrajectpry & motion) const
      |                        [34m[K~[m[K                          [01;31m[K^[m[K[32m[K~[m[K
      |                                                   [32m[K)[m[K
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:41:48:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ at end of member declaration
   41 |     void update_motions(const trajectpry_msgs::[01;31m[Kmsg[m[K::JointTrajectpry & motion) const
      |                                                [01;31m[K^~~[m[K
      |                                                   [32m[K;[m[K
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:41:53:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KJointTrajectpry[m[Kâ€™ in namespace â€˜[01m[K::[m[Kâ€™ does not name a type
   41 |     void update_motions(const trajectpry_msgs::msg::[01;31m[KJointTrajectpry[m[K & motion) const
      |                                                     [01;31m[K^~~~~~~~~~~~~~~[m[K
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:55:48:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KJointTrajectpry[m[Kâ€™ is not a member of â€˜[01m[Ktrajectory_msgs::msg[m[Kâ€™; did you mean â€˜[01m[KJointTrajectory[m[Kâ€™?
   55 |     rclcpp::Subscription<trajectory_msgs::msg::[01;31m[KJointTrajectpry[m[K>::SharedPtr subscription_;
      |                                                [01;31m[K^~~~~~~~~~~~~~~[m[K
      |                                                [32m[KJointTrajectory[m[K
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:55:63:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
   55 |     rclcpp::Subscription<trajectory_msgs::msg::JointTrajectpry[01;31m[K>[m[K::SharedPtr subscription_;
      |                                                               [01;31m[K^[m[K
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:55:63:[m[K [01;31m[Kerror: [m[Ktemplate argument 3 is invalid
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:55:63:[m[K [01;31m[Kerror: [m[Ktemplate argument 4 is invalid
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:55:63:[m[K [01;31m[Kerror: [m[Ktemplate argument 5 is invalid
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:55:66:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ at end of member declaration
   55 |     rclcpp::Subscription<trajectory_msgs::msg::JointTrajectpry>::[01;31m[KSharedPtr[m[K subscription_;
      |                                                                  [01;31m[K^~~~~~~~~[m[K
      |                                                                           [32m[K;[m[K
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:55:76:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ksubscription_[m[Kâ€™ does not name a type; did you mean â€˜[01m[Krmw_subscription_t[m[Kâ€™?
   55 |     rclcpp::Subscription<trajectory_msgs::msg::JointTrajectpry>::SharedPtr [01;31m[Ksubscription_[m[K;
      |                                                                            [01;31m[K^~~~~~~~~~~~~[m[K
      |                                                                            [32m[Krmw_subscription_t[m[K
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:[m[K In constructor â€˜[01m[KPubControl::PubControl()[m[Kâ€™:
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:22:9:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ksubscrption_[m[Kâ€™ was not declared in this scope
   22 |         [01;31m[Ksubscrption_[m[K = this->create_subscription<trajectory_msgs::msg::JointTrajectory>(
      |         [01;31m[K^~~~~~~~~~~~[m[K
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:23:85:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K)[m[Kâ€™ before â€˜[01m[K_1[m[Kâ€™
   23 |             "/motion_list_command", 10, std::bind(&PubControl::update_motions, this [01;31m[K_1[m[K));
      |                                                                                     [01;31m[K^~[m[K
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:23:50:[m[K [01;36m[Knote: [m[Kto match this â€˜[01m[K([m[Kâ€™
   23 |             "/motion_list_command", 10, std::bind[01;36m[K([m[K&PubControl::update_motions, this _1));
      |                                                  [01;36m[K^[m[K
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:[m[K In member function â€˜[01m[Kvoid PubControl::timer_callback()[m[Kâ€™:
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:32:13:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kpos[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kpow[m[Kâ€™?
   32 |             [01;31m[Kpos[m[K = order.front();
      |             [01;31m[K^~~[m[K
      |             [32m[Kpow[m[K
In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:39[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
                 from [01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:6[m[K:
/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of â€˜[01m[Kstruct rclcpp::function_traits::function_traits<std::_Bind<void (PubControl::*(PubControl*))(...)> >[m[Kâ€™:
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:380:10:[m[K   recursively required by substitution of â€˜[01m[Ktemplate<class MessageT, class CallbackT> struct rclcpp::detail::SubscriptionCallbackTypeHelper<MessageT, CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>, const rclcpp::MessageInfo&)> >::value, void>::type> [with MessageT = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; CallbackT = std::_Bind<void (PubControl::*(PubControl*))(...)>][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:380:10:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (PubControl::*(PubControl*))(...)>; MessageT = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; CallbackT = std::_Bind<void (PubControl::*(PubControl*))(...)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void>, trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; CallbackT = std::_Bind<void (PubControl::*(PubControl*))(...)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void>, trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; CallbackT = std::_Bind<void (PubControl::*(PubControl*))(...)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void>, trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; CallbackT = std::_Bind<void (PubControl::*(PubControl*))(...)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void>, trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:22:88:[m[K   required from here
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp:51:9:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kdecltype[m[Kâ€™ cannot resolve address of overloaded function
   51 |   using [01;31m[Karguments[m[K = typename tuple_tail<
      |         [01;31m[K^~~~~~~~~[m[K
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp:57:9:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kdecltype[m[Kâ€™ cannot resolve address of overloaded function
   57 |   using [01;31m[Kargument_type[m[K = typename std::tuple_element<N, arguments>::type;
      |         [01;31m[K^~~~~~~~~~~~~[m[K
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp:59:9:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kdecltype[m[Kâ€™ cannot resolve address of overloaded function
   59 |   using [01;31m[Kreturn_type[m[K = typename function_traits<decltype( &FunctionT::operator())>::return_type;
      |         [01;31m[K^~~~~~~~~~~[m[K
gmake[2]: *** [CMakeFiles/pub_control.dir/build.make:76: CMakeFiles/pub_control.dir/src/controller/pub_control.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:620: CMakeFiles/pub_control.dir/all] Error 2
gmake: *** [Makefile:146: all] Error 2
