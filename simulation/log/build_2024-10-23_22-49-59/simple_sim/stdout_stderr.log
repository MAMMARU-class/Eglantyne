[  2%] Built target simple_sim__cpp
[ 11%] Built target simple_sim__rosidl_generator_c
[ 14%] [32mBuilding CXX object CMakeFiles/pub_control.dir/src/controller/pub_control.cpp.o[0m
[ 20%] Built target pub_test
[ 20%] Built target ament_cmake_python_copy_simple_sim
[ 28%] Built target simple_sim__rosidl_typesupport_cpp
[ 37%] Built target simple_sim__rosidl_typesupport_fastrtps_c
[ 45%] Built target simple_sim__rosidl_typesupport_fastrtps_cpp
[ 54%] Built target simple_sim__rosidl_typesupport_introspection_c
[ 62%] Built target simple_sim__rosidl_typesupport_c
[ 71%] Built target simple_sim__rosidl_typesupport_introspection_cpp
[ 71%] Built target simple_sim
[ 74%] Built target simple_sim__py
[ 80%] Built target simple_sim__rosidl_generator_py
[ 85%] Built target simple_sim__rosidl_typesupport_fastrtps_c__pyext
[ 97%] Built target simple_sim__rosidl_typesupport_introspection_c__pyext
[ 97%] Built target simple_sim__rosidl_typesupport_c__pyext
running egg_info
writing simple_sim.egg-info/PKG-INFO
writing dependency_links to simple_sim.egg-info/dependency_links.txt
writing top-level names to simple_sim.egg-info/top_level.txt
reading manifest file 'simple_sim.egg-info/SOURCES.txt'
writing manifest file 'simple_sim.egg-info/SOURCES.txt'
[ 97%] Built target ament_cmake_python_build_simple_sim_egg
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:[m[K In constructor â€˜[01m[KPubControl::PubControl()[m[Kâ€™:
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:22:9:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ksubscrption_[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Ksubscription_[m[Kâ€™?
   22 |         [01;31m[Ksubscrption_[m[K = this->create_subscription<trajectory_msgs::msg::JointTrajectory>(
      |         [01;31m[K^~~~~~~~~~~~[m[K
      |         [32m[Ksubscription_[m[K
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:23:85:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K)[m[Kâ€™ before â€˜[01m[K_1[m[Kâ€™
   23 |             "/motion_list_command", 10, std::bind(&PubControl::update_motions, this [01;31m[K_1[m[K));
      |                                                                                     [01;31m[K^~[m[K
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:23:50:[m[K [01;36m[Knote: [m[Kto match this â€˜[01m[K([m[Kâ€™
   23 |             "/motion_list_command", 10, std::bind[01;36m[K([m[K&PubControl::update_motions, this _1));
      |                                                  [01;36m[K^[m[K
In file included from [01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:2[m[K:
/usr/include/c++/11/functional: In instantiation of â€˜[01m[Kstruct std::_Bind_check_arity<void (PubControl::*)(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const, PubControl*>[m[Kâ€™:
[01m[K/usr/include/c++/11/functional:768:12:[m[K   required from â€˜[01m[Kstruct std::_Bind_helper<false, void (PubControl::*)(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const, PubControl*>[m[Kâ€™
[01m[K/usr/include/c++/11/functional:789:5:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Func, class ... _BoundArgs> typename std::_Bind_helper<std::__is_socketlike<_Func>::value, _Func, _BoundArgs ...>::type std::bind(_Func&&, _BoundArgs&& ...) [with _Func = void (PubControl::*)(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const; _BoundArgs = {PubControl*}][m[Kâ€™
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:23:50:[m[K   required from here
[01m[K/usr/include/c++/11/functional:756:21:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: Wrong number of arguments for pointer-to-member
  755 |       static_assert(_Varargs::[01;31m[Kvalue[m[K
      |                               [01;31m[K~~~~~[m[K
  756 | [01;31m[K                    ? sizeof...(_BoundArgs) >= _Arity::value + 1[m[K
      |                     [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  757 | [01;31m[K                    : sizeof...(_BoundArgs) == _Arity::value + 1[m[K,
      |                     [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/11/functional:756:21:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(false ? (1 >= (((long unsigned int)std::integral_constant<long unsigned int, 1>::value) + 1)) : (1 == (((long unsigned int)std::integral_constant<long unsigned int, 1>::value) + 1)))[m[Kâ€™ evaluates to false
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:[m[K In member function â€˜[01m[Kvoid PubControl::timer_callback()[m[Kâ€™:
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:32:13:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kpos[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kpow[m[Kâ€™?
   32 |             [01;31m[Kpos[m[K = order.front();
      |             [01;31m[K^~~[m[K
      |             [32m[Kpow[m[K
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:[m[K In member function â€˜[01m[Kvoid PubControl::update_motions(const JointTrajectory&) const[m[Kâ€™:
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:44:35:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kmotion_list[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kmosion_list[m[Kâ€™?
   44 |         order.insert(order.end(), [01;31m[Kmotion_list[m[K.begin(), motion_list.end());
      |                                   [01;31m[K^~~~~~~~~~~[m[K
      |                                   [32m[Kmosion_list[m[K
In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
                 from [01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:6[m[K:
/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (PubControl::*(PubControl*))(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const>; MessageT = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; CallbackT = std::_Bind<void (PubControl::*(PubControl*))(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; CallbackT = std::_Bind<void (PubControl::*(PubControl*))(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; CallbackT = std::_Bind<void (PubControl::*(PubControl*))(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; CallbackT = std::_Bind<void (PubControl::*(PubControl*))(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:22:88:[m[K   required from here
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:27:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::function<void(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&)>::function(std::_Bind<void (PubControl::*(PubControl*))(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const>&)[m[Kâ€™
  394 |       callback_variant_ = [01;31m[Kstatic_cast<typename scbth::callback_type>(callback)[m[K;
      |                           [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/11/functional:59[m[K,
                 from [01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:2[m[K:
[01m[K/usr/include/c++/11/bits/std_function.h:435:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Functor, class _Constraints> std::function<_Res(_ArgTypes ...)>::function(_Functor&&) [with _Functor = _Functor; _Constraints = _Constraints; _Res = void; _ArgTypes = {const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&}][m[Kâ€™
  435 |         [01;36m[Kfunction[m[K(_Functor&& __f)
      |         [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/std_function.h:435:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/usr/include/c++/11/ratio:39[m[K,
                 from [01m[K/usr/include/c++/11/chrono:39[m[K,
                 from [01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:1[m[K:
/usr/include/c++/11/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using __enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = void][m[Kâ€™:
[01m[K/usr/include/c++/11/bits/std_function.h:353:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Res, class ... _ArgTypes> template<class _Cond, class _Tp> using _Requires = std::__enable_if_t<_Cond::value, _Tp> [with _Cond = std::function<void(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&)>::_Callable<std::_Bind<void (PubControl::*(PubControl*))(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const>&, std::_Bind<void (PubControl::*(PubControl*))(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const>, std::__invoke_result<std::_Bind<void (PubControl::*(PubControl*))(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const>&, const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&> >; _Tp = void; _Res = void; _ArgTypes = {const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&}][m[Kâ€™
[01m[K/usr/include/c++/11/bits/std_function.h:434:9:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (PubControl::*(PubControl*))(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const>; MessageT = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; CallbackT = std::_Bind<void (PubControl::*(PubControl*))(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; CallbackT = std::_Bind<void (PubControl::*(PubControl*))(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; CallbackT = std::_Bind<void (PubControl::*(PubControl*))(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; CallbackT = std::_Bind<void (PubControl::*(PubControl*))(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:22:88:[m[K   required from here
[01m[K/usr/include/c++/11/type_traits:2205:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
 2205 |     using [01;31m[K__enable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
      |           [01;31m[K^~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/11/functional:59[m[K,
                 from [01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:2[m[K:
/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (PubControl::*(PubControl*))(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const>; MessageT = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; CallbackT = std::_Bind<void (PubControl::*(PubControl*))(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; CallbackT = std::_Bind<void (PubControl::*(PubControl*))(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; CallbackT = std::_Bind<void (PubControl::*(PubControl*))(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >; CallbackT = std::_Bind<void (PubControl::*(PubControl*))(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/home/hibiki/Robomech_HR/Eglantyne/simulation/src/simple_sim/src/controller/pub_control.cpp:22:88:[m[K   required from here
[01m[K/usr/include/c++/11/bits/std_function.h:404:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&}][m[Kâ€™
  404 |       [01;36m[Kfunction[m[K(function&& __x) noexcept
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/std_function.h:404:27:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<void (PubControl::*(PubControl*))(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const>[m[Kâ€™ to â€˜[01m[Kstd::function<void(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&)>&&[m[Kâ€™
  404 |       function([01;36m[Kfunction&& __x[m[K) noexcept
      |                [01;36m[K~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/11/bits/std_function.h:386:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&}][m[Kâ€™
  386 |       [01;36m[Kfunction[m[K(const function& __x)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/std_function.h:386:32:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<void (PubControl::*(PubControl*))(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const>[m[Kâ€™ to â€˜[01m[Kconst std::function<void(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&)>&[m[Kâ€™
  386 |       function([01;36m[Kconst function& __x[m[K)
      |                [01;36m[K~~~~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/11/bits/std_function.h:375:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function(std::nullptr_t) [with _Res = void; _ArgTypes = {const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&}; std::nullptr_t = std::nullptr_t][m[Kâ€™
  375 |       [01;36m[Kfunction[m[K(nullptr_t) noexcept
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/std_function.h:375:16:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<void (PubControl::*(PubControl*))(const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&) const>[m[Kâ€™ to â€˜[01m[Kstd::nullptr_t[m[Kâ€™
  375 |       function([01;36m[Knullptr_t[m[K) noexcept
      |                [01;36m[K^~~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/std_function.h:368:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function() [with _Res = void; _ArgTypes = {const trajectory_msgs::msg::JointTrajectory_<std::allocator<void> >&}][m[Kâ€™
  368 |       [01;36m[Kfunction[m[K() noexcept
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/std_function.h:368:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
gmake[2]: *** [CMakeFiles/pub_control.dir/build.make:76: CMakeFiles/pub_control.dir/src/controller/pub_control.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:620: CMakeFiles/pub_control.dir/all] Error 2
gmake: *** [Makefile:146: all] Error 2
